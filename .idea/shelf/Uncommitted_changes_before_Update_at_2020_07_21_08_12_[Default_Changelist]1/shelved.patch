Index: src/main/resources/application-dev.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  datasource:\r\n    url: jdbc:mysql://:3306/zkwg?serverTimezone=Asia/Shanghai？\r\n    username: root\r\n    password: root\r\n    #driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n\r\nmybatis:\r\n  mapper-locations: classpath*:mapper/*.xml\r\n#自定义属性配置\r\nzkwg:\r\n  redis:\r\n    host:\r\n    port: 6379\r\n    #没有密码的话 这里留空即可\r\n    pass:\r\n  aes:\r\n    passkey: dP0ykNOnMdKFaXCIOnXckg==
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/application-dev.yml	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/resources/application-dev.yml	(date 1595290326426)
@@ -1,21 +1,23 @@
 spring:
   datasource:
-    url: jdbc:mysql://:3306/zkwg?serverTimezone=Asia/Shanghai？
+    url: jdbc:mysql://192.168.247.130:3306/zkwg?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
     username: root
-    password: root
-    #driver-class-name: com.mysql.cj.jdbc.Driver
-    type: com.alibaba.druid.pool.DruidDataSource
+    password: 123456
     driver-class-name: com.mysql.cj.jdbc.Driver
+    type: com.alibaba.druid.pool.DruidDataSource
 
 
 mybatis:
   mapper-locations: classpath*:mapper/*.xml
+  configuration:
+    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
+
 #自定义属性配置
 zkwg:
   redis:
-    host:
+    host: 192.168.247.130
     port: 6379
     #没有密码的话 这里留空即可
-    pass:
+    pass: 1234
   aes:
     passkey: dP0ykNOnMdKFaXCIOnXckg==
\ No newline at end of file
Index: src/main/java/com/qf/pojo/ReceverAddressInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/ReceverAddressInfo.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/pojo/ReceverAddressInfo.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
@@ -1,47 +0,0 @@
-package com.qf.pojo;
-
-import lombok.Data;
-
-@Data
-public class ReceverAddressInfo {
-    /**
-     *
-     */
-    private Integer id;
-
-    /**
-     *
-     */
-    private String province;
-
-    /**
-     *
-     */
-    private String city;
-
-    /**
-     *
-     */
-    private String detailed_address;
-
-    /**
-     *
-     */
-    private String zip_code;
-
-    /**
-     *
-     */
-    private String recever_name;
-
-    /**
-     *
-     */
-    private String phone;
-
-    /**
-     *
-     */
-    private Integer user_id;
-}
-
Index: src/main/java/com/qf/pojo/GoodsType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/GoodsType.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/pojo/GoodsType.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
@@ -1,17 +0,0 @@
-package com.qf.pojo;
-
-import lombok.Data;
-
-@Data
-public class GoodsType {
-    /**
-     *
-     */
-    private Integer goods_id;
-
-    /**
-     *
-     */
-    private String goods_name;
-}
-
Index: src/main/java/com/qf/pojo/OnlineStoreType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/OnlineStoreType.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/pojo/OnlineStoreType.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
@@ -1,22 +0,0 @@
-package com.qf.pojo;
-
-import lombok.Data;
-
-@Data
-public class OnlineStoreType {
-    /**
-     *
-     */
-    private Integer online_id;
-
-    /**
-     *
-     */
-    private String online_name;
-
-    /**
-     *
-     */
-    private Integer goods_id;
-}
-
Index: src/main/java/com/qf/pojo/OnlineStore.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/OnlineStore.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/pojo/OnlineStore.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
@@ -1,37 +0,0 @@
-package com.qf.pojo;
-
-import lombok.Data;
-
-@Data
-public class OnlineStore {
-    /**
-     *
-     */
-    private Integer product_id;
-
-    /**
-     *
-     */
-    private String product_imgurl;
-
-    /**
-     *
-     */
-    private String product_name;
-
-    /**
-     *
-     */
-    private Double product_price;
-
-    /**
-     *
-     */
-    private String shop_name;
-
-    /**
-     *
-     */
-    private Integer product_type_id;
-}
-
Index: src/main/java/com/qf/pojo/ProductType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/ProductType.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/pojo/ProductType.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
@@ -1,22 +0,0 @@
-package com.qf.pojo;
-
-import lombok.Data;
-
-@Data
-public class ProductType {
-    /**
-     *
-     */
-    private Integer product_type_id;
-
-    /**
-     *
-     */
-    private String product_type_name;
-
-    /**
-     *
-     */
-    private Integer online_id;
-}
-
Index: src/main/resources/application-prod.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  datasource:\r\n    url: jdbc:mysql://39.99.175.195:3306/zkwg?serverTimezone=Asia/Shanghai？\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n\r\nmybatis:\r\n  mapper-locations: classpath*:mapper/*.xml\r\n#自定义属性配置\r\nzkwg:\r\n  redis:\r\n    host: 47.92.157.246\r\n    port: 6379\r\n    #没有密码的话 这里留空即可\r\n    pass:\r\n  aes:\r\n    passkey: dP0ykNOnMdKFaXCIOnXckg==
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/application-prod.yml	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/resources/application-prod.yml	(date 1595290326427)
@@ -1,6 +1,6 @@
 spring:
   datasource:
-    url: jdbc:mysql://39.99.175.195:3306/zkwg?serverTimezone=Asia/Shanghai？
+    url: jdbc:mysql://39.99.175.195:3306/zkwg?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
     username: root
     password: root
     type: com.alibaba.druid.pool.DruidDataSource
Index: src/main/resources/application-test.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring:\r\n  datasource:\r\n    url: jdbc:mysql://39.99.175.195:3306/zkwg?serverTimezone=Asia/Shanghai？\r\n    username: root\r\n    password: root\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n\r\n\r\nmybatis:\r\n  mapper-locations: classpath*:mapper/*.xml\r\n#自定义属性配置\r\nzkwg:\r\n  redis:\r\n    host: 47.92.157.246\r\n    port: 6379\r\n    #没有密码的话 这里留空即可\r\n    pass:\r\n  aes:\r\n    passkey: dP0ykNOnMdKFaXCIOnXckg==
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/application-test.yml	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/resources/application-test.yml	(date 1595290326427)
@@ -1,6 +1,6 @@
 spring:
   datasource:
-    url: jdbc:mysql://39.99.175.195:3306/zkwg?serverTimezone=Asia/Shanghai？
+    url: jdbc:mysql://39.99.175.195:3306/zkwg?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
     username: root
     password: root
     type: com.alibaba.druid.pool.DruidDataSource
Index: zkshopping.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"Spring\" name=\"Spring\">\r\n      <configuration />\r\n    </facet>\r\n    <facet type=\"web\" name=\"Web\">\r\n      <configuration>\r\n        <webroots />\r\n        <sourceRoots>\r\n          <root url=\"file://$MODULE_DIR$/src/main/java\" />\r\n          <root url=\"file://$MODULE_DIR$/src/main/resources\" />\r\n        </sourceRoots>\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\r\n    <output url=\"file://$MODULE_DIR$/target/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/target/test-classes\" />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/main/resources\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src/test/java\" isTestSource=\"true\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"1.8\" jdkType=\"JavaSDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.alibaba:fastjson:1.2.68\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: redis.clients:jedis:3.3.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-pool2:2.8.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.mail:javax.mail:1.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.activation:activation:1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-swagger2:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.swagger:swagger-annotations:1.5.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.swagger:swagger-models:1.5.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-spi:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-core:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-schema:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-swagger-common:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-spring-web:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.guava:guava:20.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml:classmate:1.5.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mapstruct:mapstruct:1.2.0.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.xiaoymin:swagger-bootstrap-ui:1.9.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.javassist:javassist:3.25.0-GA\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun.oss:aliyun-sdk-oss:3.10.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.httpcomponents:httpclient:4.5.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.httpcomponents:httpcore:4.4.13\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-codec:commons-codec:1.14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jdom:jdom2:2.0.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.codehaus.jettison:jettison:1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: stax:stax-api:1.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-core:3.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-ram:3.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-sts:3.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-ecs:4.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-kms:2.7.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.code.gson:gson:2.8.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-fileupload:commons-fileupload:1.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-io:commons-io:1.3.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-web:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-logging:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: ch.qos.logback:logback-classic:1.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: ch.qos.logback:logback-core:1.2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-to-slf4j:2.13.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.logging.log4j:log4j-api:2.13.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:jul-to-slf4j:1.7.30\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: jakarta.annotation:jakarta.annotation-api:1.3.5\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.yaml:snakeyaml:1.26\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-json:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-databind:2.11.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-core:2.11.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-tomcat:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat.embed:tomcat-embed-core:9.0.36\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.glassfish:jakarta.el:3.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.tomcat.embed:tomcat-embed-websocket:9.0.36\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-web:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-beans:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-webmvc:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-aop:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-context:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-expression:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.alibaba:fastjson:1.2.68\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: redis.clients:jedis:3.3.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.slf4j:slf4j-api:1.7.30\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.commons:commons-pool2:2.8.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-starter-jdbc:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.zaxxer:HikariCP:3.4.5\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jdbc:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-tx:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mybatis.spring.boot:mybatis-spring-boot-autoconfigure:2.1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mybatis:mybatis:3.5.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mybatis:mybatis-spring:2.0.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: mysql:mysql-connector-java:8.0.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.alibaba:druid-spring-boot-starter:1.1.10\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.alibaba:druid:1.1.10\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.boot:spring-boot-autoconfigure:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.pagehelper:pagehelper-spring-boot-starter:1.2.13\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.pagehelper:pagehelper-spring-boot-autoconfigure:1.2.13\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.pagehelper:pagehelper:5.1.11\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.jsqlparser:jsqlparser:2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.sun.mail:javax.mail:1.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: javax.activation:activation:1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-swagger2:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.swagger:swagger-annotations:1.5.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.swagger:swagger-models:1.5.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml.jackson.core:jackson-annotations:2.11.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-spi:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-core:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-schema:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-swagger-common:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: io.springfox:springfox-spring-web:2.9.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.guava:guava:20.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.fasterxml:classmate:1.5.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.mapstruct:mapstruct:1.2.0.Final\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.github.xiaoymin:swagger-bootstrap-ui:1.9.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.javassist:javassist:3.25.0-GA\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.projectlombok:lombok:1.18.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-starter-test:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-test:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework.boot:spring-boot-test-autoconfigure:2.3.1.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: com.jayway.jsonpath:json-path:2.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: net.minidev:json-smart:2.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: net.minidev:accessors-smart:1.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.ow2.asm:asm:5.0.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: jakarta.xml.bind:jakarta.xml.bind-api:2.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: jakarta.activation:jakarta.activation-api:1.2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.assertj:assertj-core:3.16.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.hamcrest:hamcrest:2.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter:5.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-api:5.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.apiguardian:apiguardian-api:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.opentest4j:opentest4j:1.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-commons:1.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-params:5.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.jupiter:junit-jupiter-engine:5.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.junit.platform:junit-platform-engine:1.6.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.mockito:mockito-core:3.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: net.bytebuddy:byte-buddy:1.10.11\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: net.bytebuddy:byte-buddy-agent:1.10.11\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.objenesis:objenesis:2.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.mockito:mockito-junit-jupiter:3.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.skyscreamer:jsonassert:1.5.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: com.vaadin.external.google:android-json:0.0.20131108.vaadin1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-core:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.springframework:spring-jcl:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.springframework:spring-test:5.2.7.RELEASE\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Maven: org.xmlunit:xmlunit-core:2.7.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun.oss:aliyun-sdk-oss:3.10.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.httpcomponents:httpclient:4.5.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.apache.httpcomponents:httpcore:4.4.13\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-codec:commons-codec:1.14\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.jdom:jdom2:2.0.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: org.codehaus.jettison:jettison:1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: stax:stax-api:1.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-core:3.4.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-ram:3.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-sts:3.0.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-ecs:4.2.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.aliyun:aliyun-java-sdk-kms:2.7.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: com.google.code.gson:gson:2.8.6\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-fileupload:commons-fileupload:1.3.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Maven: commons-io:commons-io:1.3.2\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- zkshopping.iml	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ zkshopping.iml	(date 1595290326429)
@@ -25,41 +25,6 @@
     </content>
     <orderEntry type="jdk" jdkName="1.8" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" name="Maven: com.alibaba:fastjson:1.2.68" level="project" />
-    <orderEntry type="library" name="Maven: redis.clients:jedis:3.3.0" level="project" />
-    <orderEntry type="library" name="Maven: org.apache.commons:commons-pool2:2.8.0" level="project" />
-    <orderEntry type="library" name="Maven: com.sun.mail:javax.mail:1.6.2" level="project" />
-    <orderEntry type="library" name="Maven: javax.activation:activation:1.1" level="project" />
-    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger2:2.9.2" level="project" />
-    <orderEntry type="library" name="Maven: io.swagger:swagger-annotations:1.5.20" level="project" />
-    <orderEntry type="library" name="Maven: io.swagger:swagger-models:1.5.20" level="project" />
-    <orderEntry type="library" name="Maven: io.springfox:springfox-spi:2.9.2" level="project" />
-    <orderEntry type="library" name="Maven: io.springfox:springfox-core:2.9.2" level="project" />
-    <orderEntry type="library" name="Maven: io.springfox:springfox-schema:2.9.2" level="project" />
-    <orderEntry type="library" name="Maven: io.springfox:springfox-swagger-common:2.9.2" level="project" />
-    <orderEntry type="library" name="Maven: io.springfox:springfox-spring-web:2.9.2" level="project" />
-    <orderEntry type="library" name="Maven: com.google.guava:guava:20.0" level="project" />
-    <orderEntry type="library" name="Maven: com.fasterxml:classmate:1.5.1" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.springframework.plugin:spring-plugin-metadata:1.2.0.RELEASE" level="project" />
-    <orderEntry type="library" name="Maven: org.mapstruct:mapstruct:1.2.0.Final" level="project" />
-    <orderEntry type="library" name="Maven: com.github.xiaoymin:swagger-bootstrap-ui:1.9.6" level="project" />
-    <orderEntry type="library" name="Maven: org.javassist:javassist:3.25.0-GA" level="project" />
-    <orderEntry type="library" name="Maven: com.aliyun.oss:aliyun-sdk-oss:3.10.2" level="project" />
-    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpclient:4.5.12" level="project" />
-    <orderEntry type="library" name="Maven: org.apache.httpcomponents:httpcore:4.4.13" level="project" />
-    <orderEntry type="library" name="Maven: commons-codec:commons-codec:1.14" level="project" />
-    <orderEntry type="library" name="Maven: org.jdom:jdom2:2.0.6" level="project" />
-    <orderEntry type="library" name="Maven: org.codehaus.jettison:jettison:1.1" level="project" />
-    <orderEntry type="library" name="Maven: stax:stax-api:1.0.1" level="project" />
-    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-core:3.4.0" level="project" />
-    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-ram:3.0.0" level="project" />
-    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-sts:3.0.0" level="project" />
-    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-ecs:4.2.0" level="project" />
-    <orderEntry type="library" name="Maven: com.aliyun:aliyun-java-sdk-kms:2.7.0" level="project" />
-    <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.6" level="project" />
-    <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.3" level="project" />
-    <orderEntry type="library" name="Maven: commons-io:commons-io:1.3.2" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter-web:2.3.1.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot-starter:2.3.1.RELEASE" level="project" />
     <orderEntry type="library" name="Maven: org.springframework.boot:spring-boot:2.3.1.RELEASE" level="project" />
@@ -171,5 +136,8 @@
     <orderEntry type="library" name="Maven: com.google.code.gson:gson:2.8.6" level="project" />
     <orderEntry type="library" name="Maven: commons-fileupload:commons-fileupload:1.3.3" level="project" />
     <orderEntry type="library" name="Maven: commons-io:commons-io:1.3.2" level="project" />
+    <orderEntry type="library" name="Maven: com.alipay.sdk:alipay-sdk-java:4.10.58.ALL" level="project" />
+    <orderEntry type="library" name="Maven: commons-logging:commons-logging:1.1.1" level="project" />
+    <orderEntry type="library" name="Maven: org.bouncycastle:bcprov-jdk15on:1.62" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\r\n  port: 8080\r\nspring:\r\n  profiles:\r\n    active: prod
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/application.yml	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/resources/application.yml	(date 1595290326428)
@@ -2,4 +2,4 @@
   port: 8080
 spring:
   profiles:
-    active: prod
\ No newline at end of file
+    active: dev
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.3.1.RELEASE</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <groupId>com.qf</groupId>\r\n    <artifactId>zkshopping</artifactId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>zkshopping</name>\r\n    <description>A shopping platform</description>\r\n\r\n    <!--声明的版本号-->\r\n    <properties>\r\n        <java.version>1.8</java.version>\r\n        <fastjson.version>1.2.68</fastjson.version>\r\n        <jedis.version>3.3.0</jedis.version>\r\n    </properties>\r\n    <!--\t版本限定 约定jar只能使用声明的版本号-->\r\n    <dependencyManagement>\r\n        <dependencies>\r\n            <dependency>\r\n                <groupId>com.alibaba</groupId>\r\n                <artifactId>fastjson</artifactId>\r\n                <version>${fastjson.version}</version>\r\n            </dependency>\r\n            <dependency>\r\n                <groupId>redis.clients</groupId>\r\n                <artifactId>jedis</artifactId>\r\n                <version>${jedis.version}</version>\r\n            </dependency>\r\n\r\n        </dependencies>\r\n    </dependencyManagement>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n        <!--fastjson相关依赖-->\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>fastjson</artifactId>\r\n        </dependency>\r\n        <!--jedis相关依赖-->\r\n        <dependency>\r\n            <groupId>redis.clients</groupId>\r\n            <artifactId>jedis</artifactId>\r\n        </dependency>\r\n        <!--  引入mybatis相关依赖，必须写版本号 -->\r\n        <dependency>\r\n            <groupId>org.mybatis.spring.boot</groupId>\r\n            <artifactId>mybatis-spring-boot-starter</artifactId>\r\n            <version>2.1.1</version>\r\n        </dependency>\r\n\r\n        <!--  引入mysql相关依赖，如果不写版本号，引入的8.0以上版本\r\n         可以设置为其他版本\r\n         -->\r\n        <dependency>\r\n            <groupId>mysql</groupId>\r\n            <artifactId>mysql-connector-java</artifactId>\r\n        </dependency>\r\n        <!--druid连接池-->\r\n        <dependency>\r\n            <groupId>com.alibaba</groupId>\r\n            <artifactId>druid-spring-boot-starter</artifactId>\r\n            <version>1.1.10</version>\r\n        </dependency>\r\n        <!--pagehelper分页插件-->\r\n        <dependency>\r\n            <groupId>com.github.pagehelper</groupId>\r\n            <artifactId>pagehelper-spring-boot-starter</artifactId>\r\n            <version>1.2.13</version>\r\n        </dependency>\r\n        <!--邮箱工具依赖-->\r\n        <dependency>\r\n            <groupId>com.sun.mail</groupId>\r\n            <artifactId>javax.mail</artifactId>\r\n            <version>1.6.2</version>\r\n        </dependency>\r\n        <!--    swagger 2 依赖   -->\r\n        <dependency>\r\n            <groupId>io.springfox</groupId>\r\n            <artifactId>springfox-swagger2</artifactId>\r\n            <version>2.9.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.github.xiaoymin</groupId>\r\n            <artifactId>swagger-bootstrap-ui</artifactId>\r\n            <version>1.9.6</version>\r\n        </dependency>\r\n        <!--   lombok依赖     -->\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n            <exclusions>\r\n                <exclusion>\r\n                    <groupId>org.junit.vintage</groupId>\r\n                    <artifactId>junit-vintage-engine</artifactId>\r\n                </exclusion>\r\n            </exclusions>\r\n        </dependency>\r\n<!--    阿里云OSS相关依赖    -->\r\n        <dependency>\r\n            <groupId>com.aliyun.oss</groupId>\r\n            <artifactId>aliyun-sdk-oss</artifactId>\r\n            <version>3.10.2</version>\r\n        </dependency>\r\n<!--    文件上传相关依赖    -->\r\n        <dependency>\r\n            <groupId>commons-fileupload</groupId>\r\n            <artifactId>commons-fileupload</artifactId>\r\n            <version>1.3.3</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.commons</groupId>\r\n            <artifactId>commons-io</artifactId>\r\n            <version>1.3.2</version>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ pom.xml	(date 1595290326412)
@@ -112,13 +112,13 @@
                 </exclusion>
             </exclusions>
         </dependency>
-<!--    阿里云OSS相关依赖    -->
+        <!--    阿里云OSS相关依赖    -->
         <dependency>
             <groupId>com.aliyun.oss</groupId>
             <artifactId>aliyun-sdk-oss</artifactId>
             <version>3.10.2</version>
         </dependency>
-<!--    文件上传相关依赖    -->
+        <!--    文件上传相关依赖    -->
         <dependency>
             <groupId>commons-fileupload</groupId>
             <artifactId>commons-fileupload</artifactId>
@@ -129,6 +129,13 @@
             <artifactId>commons-io</artifactId>
             <version>1.3.2</version>
         </dependency>
+        <!--阿里支付相关依赖 -->
+        <dependency>
+            <groupId>com.alipay.sdk</groupId>
+            <artifactId>alipay-sdk-java</artifactId>
+            <version>4.10.58.ALL</version>
+        </dependency>
+
     </dependencies>
 
     <build>
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Encoding\" defaultCharsetForPropertiesFiles=\"UTF-8\">\r\n    <file url=\"file://$PROJECT_DIR$\" charset=\"UTF-8\" />\r\n    <file url=\"PROJECT\" charset=\"UTF-8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/encodings.xml	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ .idea/encodings.xml	(date 1595290326411)
@@ -2,6 +2,7 @@
 <project version="4">
   <component name="Encoding" defaultCharsetForPropertiesFiles="UTF-8">
     <file url="file://$PROJECT_DIR$" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
     <file url="PROJECT" charset="UTF-8" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"InspectionProjectProfileManager\">\r\n  <profile version=\"1.0\" is_locked=\"false\">\r\n    <option name=\"myName\" value=\"Project Default\" />\r\n  </profile>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/Project_Default.xml	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ .idea/inspectionProfiles/Project_Default.xml	(date 1595290326412)
@@ -1,5 +1,36 @@
 <component name="InspectionProjectProfileManager">
   <profile version="1.0" is_locked="false">
     <option name="myName" value="Project Default" />
+    <inspection_tool class="JavaDoc" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="TOP_LEVEL_CLASS_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="INNER_CLASS_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="METHOD_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="@return@param@throws or @exception" />
+        </value>
+      </option>
+      <option name="FIELD_OPTIONS">
+        <value>
+          <option name="ACCESS_JAVADOC_REQUIRED_FOR" value="none" />
+          <option name="REQUIRED_TAGS" value="" />
+        </value>
+      </option>
+      <option name="IGNORE_DEPRECATED" value="false" />
+      <option name="IGNORE_JAVADOC_PERIOD" value="true" />
+      <option name="IGNORE_DUPLICATED_THROWS" value="false" />
+      <option name="IGNORE_POINT_TO_ITSELF" value="false" />
+      <option name="myAdditionalJavadocTags" value="Class:,Description:,Author:,Create:,Interface:,date" />
+    </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
Index: src/main/java/com/qf/pojo/ThirdLevelType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/ThirdLevelType.java	(date 0)
+++ src/main/java/com/qf/pojo/ThirdLevelType.java	(date 0)
@@ -0,0 +1,31 @@
+package com.qf.pojo;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import java.io.Serializable;
+import lombok.Data;
+
+@ApiModel(value = "com-qf-pojo-ThirdLevelType")
+@Data
+public class ThirdLevelType implements Serializable {
+    /**
+     *
+     */
+    @ApiModelProperty(value = "")
+    private Integer id;
+
+    /**
+     * 三级分类名称
+     */
+    @ApiModelProperty(value = "三级分类名称")
+    private String name;
+
+    /**
+     * 二级分类编号
+     */
+    @ApiModelProperty(value = "二级分类编号")
+    private Integer sceond_level_id;
+
+    private static final long serialVersionUID = 1L;
+}
+
Index: src/main/java/com/qf/pojo/UserOrderGoods.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf.pojo;\r\n\r\nimport lombok.Data;\r\n\r\n@Data\r\npublic class UserOrderGoods {\r\n    /**\r\n     *\r\n     */\r\n    private Integer id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Integer product_id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Integer user_order_id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Integer goods_num;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Double total_fee;\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/UserOrderGoods.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/pojo/UserOrderGoods.java	(date 1595290326423)
@@ -1,32 +1,43 @@
 package com.qf.pojo;
 
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import java.io.Serializable;
 import lombok.Data;
 
+@ApiModel(value = "com-qf-pojo-UserOrderGoods")
 @Data
-public class UserOrderGoods {
+public class UserOrderGoods implements Serializable {
     /**
      *
      */
+    @ApiModelProperty(value = "")
     private Integer id;
 
     /**
-     *
+     * 商品编号
      */
-    private Integer product_id;
+    @ApiModelProperty(value = "商品编号")
+    private Integer goods_id;
 
     /**
-     *
+     * 订单编号
      */
+    @ApiModelProperty(value = "订单编号")
     private Integer user_order_id;
 
     /**
-     *
+     * 商品购买数量
      */
+    @ApiModelProperty(value = "商品购买数量")
     private Integer goods_num;
 
     /**
-     *
+     * 商品总金额
      */
+    @ApiModelProperty(value = "商品总金额")
     private Double total_fee;
+
+    private static final long serialVersionUID = 1L;
 }
 
Index: src/main/java/com/qf/pojo/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf.pojo;\r\n\r\nimport java.util.Date;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonFormat;\r\nimport lombok.Data;\r\nimport org.springframework.format.annotation.DateTimeFormat;\r\n\r\n@Data\r\npublic class User {\r\n    /**\r\n     *\r\n     */\r\n    private Integer id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String username;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String password;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String img_url;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String nickname;\r\n\r\n    /**\r\n     * 性别 0女 1 男\r\n     */\r\n    private Integer gender;\r\n\r\n    /**\r\n     * 生日，sql 计算年龄\r\n     * @JsonFormat 作为 json 输出的时间格式\r\n     * @DateTimeFormat 作为 对象 输入的时间格式\r\n     */\r\n    @JsonFormat(pattern = \"yyyy-MM-dd\", locale = \"zh\", timezone = \"GMT+8\")\r\n    @DateTimeFormat(pattern = \"yyyy-MM-dd\")\r\n    private Date birthday;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String phone;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String email;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String qq_number;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String weibo_number;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Integer address_id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Integer appointment_id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private String order_id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Integer cart_id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Integer message_id;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private Integer integrate_id;\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/User.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/pojo/User.java	(date 1595290326421)
@@ -1,100 +1,120 @@
 package com.qf.pojo;
 
-import java.util.Date;
-
 import com.fasterxml.jackson.annotation.JsonFormat;
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import java.io.Serializable;
+import java.util.Date;
 import lombok.Data;
 import org.springframework.format.annotation.DateTimeFormat;
 
+@ApiModel(value = "com-qf-pojo-User")
 @Data
-public class User {
+public class User implements Serializable {
     /**
      *
      */
+    @ApiModelProperty(value = "")
     private Integer id;
 
     /**
-     *
+     * 用户名
      */
+    @ApiModelProperty(value = "用户名")
     private String username;
 
     /**
-     *
+     * 密码
      */
+    @ApiModelProperty(value = "密码")
     private String password;
 
     /**
-     *
+     * 头像地址
      */
+    @ApiModelProperty(value = "头像地址")
     private String img_url;
 
     /**
-     *
+     * 昵称
      */
+    @ApiModelProperty(value = "昵称")
     private String nickname;
 
     /**
      * 性别 0女 1 男
      */
+    @ApiModelProperty(value = "性别 0女 1 男")
     private Integer gender;
 
     /**
-     * 生日，sql 计算年龄
-     * @JsonFormat 作为 json 输出的时间格式
-     * @DateTimeFormat 作为 对象 输入的时间格式
+     * 生日
      */
+    @ApiModelProperty(value = "生日")
     @JsonFormat(pattern = "yyyy-MM-dd", locale = "zh", timezone = "GMT+8")
     @DateTimeFormat(pattern = "yyyy-MM-dd")
     private Date birthday;
 
     /**
-     *
+     * 手机号
      */
+    @ApiModelProperty(value = "手机号")
     private String phone;
 
     /**
-     *
+     * 邮箱
      */
+    @ApiModelProperty(value = "邮箱")
     private String email;
 
     /**
-     *
+     * QQ号码
      */
+    @ApiModelProperty(value = "QQ号码")
     private String qq_number;
 
     /**
-     *
+     * 微博号码
      */
+    @ApiModelProperty(value = "微博号码")
     private String weibo_number;
 
     /**
-     *
+     * 地址编号
      */
+    @ApiModelProperty(value = "地址编号")
     private Integer address_id;
 
     /**
-     *
+     * 预约编号
      */
+    @ApiModelProperty(value = "预约编号")
     private Integer appointment_id;
 
     /**
-     *
+     * 订单编号
      */
+    @ApiModelProperty(value = "订单编号")
     private String order_id;
 
     /**
-     *
+     * 购物车编号
      */
+    @ApiModelProperty(value = "购物车编号")
     private Integer cart_id;
 
     /**
-     *
+     * 消息中心编号
      */
+    @ApiModelProperty(value = "消息中心编号")
     private Integer message_id;
 
     /**
-     *
+     * 积分编号
      */
+    @ApiModelProperty(value = "积分编号")
     private Integer integrate_id;
+
+    private static final long serialVersionUID = 1L;
 }
 
Index: src/main/java/com/qf/pojo/Goods.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/Goods.java	(date 0)
+++ src/main/java/com/qf/pojo/Goods.java	(date 0)
@@ -0,0 +1,103 @@
+package com.qf.pojo;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import java.io.Serializable;
+import lombok.Data;
+
+@ApiModel(value = "com-qf-pojo-Goods")
+@Data
+public class Goods implements Serializable {
+    /**
+     * 商品编号
+     */
+    @ApiModelProperty(value = "商品编号")
+    private Integer id;
+
+    /**
+     * 商品编码（生成）
+     */
+    @ApiModelProperty(value = "商品编码（生成）")
+    private String goods_code;
+
+    /**
+     * 商品图片表编号
+     */
+    @ApiModelProperty(value = "商品图片表编号")
+    private String img_id;
+
+    /**
+     * 商品名称
+     */
+    @ApiModelProperty(value = "商品名称")
+    private String name;
+
+    /**
+     * 商品价格
+     */
+    @ApiModelProperty(value = "商品价格")
+    private Double price;
+
+    /**
+     * 折扣率
+     */
+    @ApiModelProperty(value = "折扣率")
+    private Double discount;
+
+    /**
+     * 店铺编号
+     */
+    @ApiModelProperty(value = "店铺编号")
+    private Integer store_id;
+
+    /**
+     * 三级商品类型编号
+     */
+    @ApiModelProperty(value = "三级商品类型编号")
+    private Integer third_level_id;
+
+    /**
+     * 商品广告语
+     */
+    @ApiModelProperty(value = "商品广告语")
+    private String slogan;
+
+    /**
+     * 商品描述
+     */
+    @ApiModelProperty(value = "商品描述")
+    private String description;
+
+    /**
+     * 商品评分（1-5颗星）
+     */
+    @ApiModelProperty(value = "商品评分（1-5颗星）")
+    private Integer score;
+
+    /**
+     * 评价表编号
+     */
+    @ApiModelProperty(value = "评价表编号")
+    private Integer comment_id;
+
+    /**
+     * 库存数量
+     */
+    @ApiModelProperty(value = "库存数量")
+    private Integer storage_num;
+
+    /**
+     * 商品型号
+     */
+    @ApiModelProperty(value = "商品型号")
+    private String size;
+
+    /**
+     * 商品颜色
+     */
+    @ApiModelProperty(value = "商品颜色")
+    private String color;
+
+    private static final long serialVersionUID = 1L;
+}
+
Index: src/main/java/com/qf/service/GoodsInfoService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/service/GoodsInfoService.java	(date 0)
+++ src/main/java/com/qf/service/GoodsInfoService.java	(date 0)
@@ -0,0 +1,22 @@
+package com.qf.service;
+
+import com.qf.vo.R;
+
+/**
+ * @Interface: OnlineStoreService
+ * @Description: 首页 在线商城 1,2,3级分类业务层
+ * @Author: Jerry(姜源)
+ * @Create: 2020/07/18 14:40
+ */
+public interface GoodsInfoService {
+
+    R queryAllGoods();
+
+    R queryTypeLevel();
+
+    R queryGoodsByFirstLevel();
+
+    R queryGoodsBySecondLevel();
+
+    R queryGoodsByThirdLevel();
+}
Index: src/main/java/com/qf/pojo/FirstLevelType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/FirstLevelType.java	(date 0)
+++ src/main/java/com/qf/pojo/FirstLevelType.java	(date 0)
@@ -0,0 +1,25 @@
+package com.qf.pojo;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import java.io.Serializable;
+import lombok.Data;
+
+@ApiModel(value = "com-qf-pojo-FirstLevelType")
+@Data
+public class FirstLevelType implements Serializable {
+    /**
+     * 商品类型编号
+     */
+    @ApiModelProperty(value = "商品类型编号")
+    private Integer id;
+
+    /**
+     * 商品类型名称 1在线商城 2餐饮娱乐 3家政服务 4美容美发 5教育培训 6汽车房产 7家居建材 8二手市场
+     */
+    @ApiModelProperty(value = "商品类型名称 1在线商城 2餐饮娱乐 3家政服务 4美容美发 5教育培训 6汽车房产 7家居建材 8二手市场")
+    private String name;
+
+    private static final long serialVersionUID = 1L;
+}
+
Index: src/main/java/com/qf/dao/GoodsInfoDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/dao/GoodsInfoDao.java	(date 0)
+++ src/main/java/com/qf/dao/GoodsInfoDao.java	(date 0)
@@ -0,0 +1,28 @@
+package com.qf.dao;
+
+import com.qf.dto.Lev1TypeDto;
+import com.qf.dto.Lev2TypeDto;
+import com.qf.dto.Lev3TypeDto;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+/**
+ * @Interface: OnlineStoreDao
+ * @Description: 首页 在线商城 1,2,3级分类控制器
+ * @Author: Jerry(姜源)
+ * @Create: 2020/07/18 14:42
+ */
+@Repository
+public interface GoodsInfoDao {
+
+    List<Lev1TypeDto> queryAllGoods();
+
+    List<Lev1TypeDto> queryGoodsType();
+
+    List<Lev1TypeDto> queryGoodsByFirstLevel();
+
+    List<Lev2TypeDto> queryGoodsBySecondLevel();
+
+    List<Lev3TypeDto> queryGoodsByThirdLevel();
+}
Index: src/main/java/com/qf/ZkshoppingApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf;\r\n\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\n\r\n@SpringBootApplication\r\npublic class ZkshoppingApplication {\r\n\r\n    public static void main(String[] args) {\r\n        SpringApplication.run(ZkshoppingApplication.class, args);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/ZkshoppingApplication.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/ZkshoppingApplication.java	(date 1595290326413)
@@ -1,9 +1,14 @@
 package com.qf;
 
+import org.mybatis.spring.annotation.MapperScan;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.transaction.annotation.EnableTransactionManagement;
 
 @SpringBootApplication
+// 启用事务
+@EnableTransactionManagement
+@MapperScan("com.qf.dao")
 public class ZkshoppingApplication {
 
     public static void main(String[] args) {
Index: src/main/java/com/qf/pojo/Store.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/pojo/Store.java	(date 0)
+++ src/main/java/com/qf/pojo/Store.java	(date 0)
@@ -0,0 +1,67 @@
+package com.qf.pojo;
+
+import io.swagger.annotations.ApiModel;
+import io.swagger.annotations.ApiModelProperty;
+import java.io.Serializable;
+import lombok.Data;
+
+@ApiModel(value = "com-qf-pojo-Store")
+@Data
+public class Store implements Serializable {
+    /**
+     * 店铺编号
+     */
+    @ApiModelProperty(value = "店铺编号")
+    private Integer store_id;
+
+    /**
+     * 店铺名称
+     */
+    @ApiModelProperty(value = "店铺名称")
+    private String store_name;
+
+    /**
+     * 店铺描述
+     */
+    @ApiModelProperty(value = "店铺描述")
+    private String description;
+
+    /**
+     * 店铺logo
+     */
+    @ApiModelProperty(value = "店铺logo")
+    private String logo_img_url;
+
+    /**
+     * 商品描述评分 默认5
+     */
+    @ApiModelProperty(value = "商品描述评分 默认5")
+    private Integer goods_desc_score;
+
+    /**
+     * 服务态度评分 默认5
+     */
+    @ApiModelProperty(value = "服务态度评分 默认5")
+    private Integer service_attitude_score;
+
+    /**
+     * 物流速度评分 默认5
+     */
+    @ApiModelProperty(value = "物流速度评分 默认5")
+    private Integer logistics_speed_score;
+
+    /**
+     * 旺旺昵称
+     */
+    @ApiModelProperty(value = "旺旺昵称")
+    private String wangwang;
+
+    /**
+     * 1代表1个心 5个心=1个钻石 5个钻石=1个皇冠 默认值为1
+     */
+    @ApiModelProperty(value = "1代表1个心 5个心=1个钻石 5个钻石=1个皇冠 默认值为1")
+    private Integer lavel;
+
+    private static final long serialVersionUID = 1L;
+}
+
Index: src/main/java/com/qf/util/OssSingleCore.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf.util;\r\n\r\nimport com.aliyun.oss.OSS;\r\nimport com.aliyun.oss.OSSClientBuilder;\r\nimport com.aliyun.oss.model.Callback;\r\nimport com.aliyun.oss.model.CreateBucketRequest;\r\nimport com.aliyun.oss.model.PutObjectRequest;\r\nimport com.aliyun.oss.model.PutObjectResult;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.IOException;\r\nimport java.util.Calendar;\r\n\r\n/**\r\n * @program: voter\r\n * @description: 封装阿里云的OSS\r\n * @author: Feri(邢朋辉)\r\n * @create: 2020-07-17 11:28\r\n */\r\npublic class OssSingleCore {\r\n    private OSS client;\r\n    String endpoint = \"https://oss-cn-beijing.aliyuncs.com\";\r\n    // 阿里云主账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM账号进行API访问或日常运维，请登录RAM控制台创建RAM账号。\r\n    String accessKeyId = \"LTAI4G61M5HtgAJF2W6H6o47\";\r\n    String accessKeySecret = \"Li4EFrMGMWRSl5kEdWN5PiJFSJrWzS\";\r\n    // 您的回调服务器地址，如http://oss-demo.aliyuncs.com:23450或http://127.0.0.1:9090。\r\n    String callbackUrl = \"http://127.0.0.1:8080\";\r\n    //单例模式的实现 ：懒汉、饿汉\r\n    //饿汉式 实现单例模式\r\n    private static OssSingleCore core=new OssSingleCore();\r\n    private OssSingleCore(){\r\n        client=new OSSClientBuilder().build(endpoint, accessKeyId, accessKeySecret);\r\n    }\r\n    public static OssSingleCore getInstance(){\r\n        return core;\r\n    }\r\n    //创建存储空间\r\n    public void createBucket(String name){\r\n        // 创建CreateBucketRequest对象。\r\n        CreateBucketRequest createBucketRequest = new CreateBucketRequest(\"<yourBucketName>\");\r\n        // 创建存储空间。\r\n        client.createBucket(createBucketRequest);\r\n    }\r\n    //验证存储空间是否存在\r\n    public boolean checkBucket(String name){\r\n        return client.doesBucketExist(name);\r\n    }\r\n    //上传  返回访问路径\r\n    public String upload(String bname,String objname,byte[] data){\r\n        //实现上传\r\n        client.putObject(bname,objname,new ByteArrayInputStream(data));\r\n        //实例化日历类\r\n        Calendar calendar=Calendar.getInstance();\r\n        calendar.add(Calendar.YEAR,3);\r\n        //生成访问路径\r\n        String url=client.generatePresignedUrl(bname,objname, calendar.getTime()).toString();\r\n        return url;\r\n    }\r\n    //上传  返回访问路径 带上回调\r\n    public String uploadCB(String bname,String objname,byte[] data) throws IOException {\r\n        PutObjectRequest putObjectRequest = new PutObjectRequest(bname, objname,new ByteArrayInputStream(data));\r\n\r\n        // 上传回调参数。\r\n        Callback callback = new Callback();\r\n        callback.setCallbackUrl(callbackUrl);\r\n        callback.setCallbackBody(\"{\\\\\\\"mimeType\\\\\\\":${mimeType},\\\\\\\"size\\\\\\\":${size}}\");\r\n        // 设置发起回调请求的Content-Type。\r\n        callback.setCalbackBodyType(Callback.CalbackBodyType.JSON);\r\n        // 设置发起回调请求的自定义参数，由Key和Value组成，Key必须以x:开始。\r\n        callback.addCallbackVar(\"x:var1\", \"value1\");\r\n        callback.addCallbackVar(\"x:var2\", \"value2\");\r\n        putObjectRequest.setCallback(callback);\r\n        //实现上传\r\n        PutObjectResult putObjectResult =client.putObject(putObjectRequest);\r\n        //实例化日历类\r\n        Calendar calendar=Calendar.getInstance();\r\n        calendar.add(Calendar.YEAR,3);\r\n        //生成访问路径\r\n        String url=client.generatePresignedUrl(bname,objname, calendar.getTime()).toString();\r\n\r\n        // 读取上传回调返回的消息内容。\r\n        byte[] buffer = new byte[1024];\r\n        int len=putObjectResult.getResponse().getContent().read(buffer);\r\n        System.out.println(new String(buffer,0,len));\r\n        // 数据读取完成后，获取的流必须关闭，否则会造成连接泄漏，导致请求无连接可用，程序无法正常工作。\r\n        putObjectResult.getResponse().getContent().close();\r\n        return url;\r\n    }\r\n    //校验对象是否存在\r\n    public boolean checkObjName(String bname,String objname){\r\n        return client.doesObjectExist(bname, objname);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/util/OssSingleCore.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/util/OssSingleCore.java	(date 1595290326425)
@@ -20,8 +20,8 @@
     private OSS client;
     String endpoint = "https://oss-cn-beijing.aliyuncs.com";
     // 阿里云主账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM账号进行API访问或日常运维，请登录RAM控制台创建RAM账号。
-    String accessKeyId = "LTAI4G61M5HtgAJF2W6H6o47";
-    String accessKeySecret = "Li4EFrMGMWRSl5kEdWN5PiJFSJrWzS";
+    String accessKeyId = "LTAI4Fy6yaoK2XcxyuFFnoyH";
+    String accessKeySecret = "kT7b2MPNjiPPDc6A3jSr6Qag4kOnY7";
     // 您的回调服务器地址，如http://oss-demo.aliyuncs.com:23450或http://127.0.0.1:9090。
     String callbackUrl = "http://127.0.0.1:8080";
     //单例模式的实现 ：懒汉、饿汉
@@ -36,7 +36,7 @@
     //创建存储空间
     public void createBucket(String name){
         // 创建CreateBucketRequest对象。
-        CreateBucketRequest createBucketRequest = new CreateBucketRequest("<yourBucketName>");
+        CreateBucketRequest createBucketRequest = new CreateBucketRequest(name);
         // 创建存储空间。
         client.createBucket(createBucketRequest);
     }
Index: src/main/java/com/qf/util/MailUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf.util;\r\n\r\nimport javax.mail.*;\r\nimport javax.mail.internet.InternetAddress;\r\nimport javax.mail.internet.MimeMessage;\r\nimport java.util.Properties;\r\nimport java.util.Random;\r\n\r\n/**\r\n * 发邮件工具类\r\n */\r\npublic final class MailUtils {\r\n\r\n    private static final String USER = \"596995854@qq.com\"; // 发件人称号，同邮箱地址\r\n    private static final String PASSWORD = \"fagblndrjjhgbecf\"; // 如果是qq邮箱可以使户端授权码\r\n\r\n    /**\r\n     * @param to    收件人邮箱\r\n     * @param text  邮件正文\r\n     * @param title 标题\r\n     */\r\n    /* 发送验证信息的邮件 */\r\n    public static boolean sendMail(String to, String text, String title) {\r\n        try {\r\n            final Properties props = new Properties();\r\n            props.put(\"mail.smtp.auth\", \"true\");\r\n            props.put(\"mail.smtp.host\", \"smtp.qq.com\");\r\n\r\n            // 发件人的账号\r\n            props.put(\"mail.user\", USER);\r\n            //发件人的密码\r\n            props.put(\"mail.password\", PASSWORD);\r\n\r\n            // 构建授权信息，用于进行SMTP进行身份验证\r\n            Authenticator authenticator = new Authenticator() {\r\n                @Override\r\n                protected PasswordAuthentication getPasswordAuthentication() {\r\n                    // 用户名、密码\r\n                    String userName = props.getProperty(\"mail.user\");\r\n                    String password = props.getProperty(\"mail.password\");\r\n                    return new PasswordAuthentication(userName, password);\r\n                }\r\n            };\r\n            // 使用环境属性和授权信息，创建邮件会话\r\n            Session mailSession = Session.getInstance(props, authenticator);\r\n            // 创建邮件消息\r\n            MimeMessage message = new MimeMessage(mailSession);\r\n            // 设置发件人\r\n            String username = props.getProperty(\"mail.user\");\r\n            InternetAddress form = new InternetAddress(username);\r\n            message.setFrom(form);\r\n\r\n            // 设置收件人\r\n            InternetAddress toAddress = new InternetAddress(to);\r\n            message.setRecipient(Message.RecipientType.TO, toAddress);\r\n\r\n            // 设置邮件标题\r\n            message.setSubject(title);\r\n\r\n            // 设置邮件的内容体\r\n            message.setContent(text, \"text/html;charset=UTF-8\");\r\n            // 发送邮件\r\n            Transport.send(message);\r\n            return true;\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static String getValidateCode(int num) {\r\n\r\n        Random random = new Random();\r\n        String validateCode = \"\";\r\n        for (int i = 0; i < num; i++) {\r\n\r\n            int result = random.nextInt(10);\r\n            validateCode += result;\r\n\r\n        }\r\n        return validateCode;\r\n    }\r\n\r\n    public static void main(String[] args) throws Exception { // 做测试用\r\n        MailUtils.sendMail(\"577521584@qq.com\", \"你好，这是一封测试邮件，无需回复。\", \"测试邮件随机生成的验证码是：\" + getValidateCode(6));\r\n        System.out.println(\"发送成功\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/util/MailUtils.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/util/MailUtils.java	(date 1595290326424)
@@ -11,8 +11,8 @@
  */
 public final class MailUtils {
 
-    private static final String USER = "596995854@qq.com"; // 发件人称号，同邮箱地址
-    private static final String PASSWORD = "fagblndrjjhgbecf"; // 如果是qq邮箱可以使户端授权码
+    private static final String USER = "1796431192@qq.com"; // 发件人称号，同邮箱地址
+    private static final String PASSWORD = "pzidbwsdtbqufbbb"; // 如果是qq邮箱可以使户端授权码
 
     /**
      * @param to    收件人邮箱
@@ -82,7 +82,7 @@
     }
 
     public static void main(String[] args) throws Exception { // 做测试用
-        MailUtils.sendMail("577521584@qq.com", "你好，这是一封测试邮件，无需回复。", "测试邮件随机生成的验证码是：" + getValidateCode(6));
+        MailUtils.sendMail("1525452238@qq.com", "你好，这是一封测试邮件，无需回复。", "测试邮件随机生成的验证码是：" + getValidateCode(6));
         System.out.println("发送成功");
     }
 }
Index: src/main/java/com/qf/config/RedisKeyConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf.config;\r\n\r\n/**\r\n * @ClassName: RedisKeyConfig\r\n * @Author: 刘嘉豪\r\n * @Date: 2020/7/15\r\n * @Time: 16:09\r\n */\r\npublic class RedisKeyConfig {\r\n    //令牌 Token\r\n    //后面追加手机号 值存储令牌\r\n    public static final String PHONE_TOKEN=\"zkwg:phone:\";\r\n    //后面追加令牌 值存储用户信息\r\n    public static final String TOKEN_USER=\"zkwg:token:\";\r\n    //后面跟手机号 冻结的手机号\r\n    public static final String PHONE_FOR=\"zkwg:for:phone:\";\r\n    //后面跟手机号和时间戳\r\n    public static final String PHONE_ERROR=\"zkwg:error:phone:\";\r\n\r\n    //有效期  seconds\r\n    public static final int TOKEN_TIME=30*60; //令牌有效期 单位秒\r\n    public static final int TOKENFOR_TIME=30*60; //冻结账号 单位秒\r\n    public static final int PHONERROR_TIME=10*60; //错误的有效期 单位秒\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/config/RedisKeyConfig.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/config/RedisKeyConfig.java	(date 1595290326414)
@@ -12,11 +12,26 @@
     public static final String PHONE_TOKEN="zkwg:phone:";
     //后面追加令牌 值存储用户信息
     public static final String TOKEN_USER="zkwg:token:";
+
     //后面跟手机号 冻结的手机号
     public static final String PHONE_FOR="zkwg:for:phone:";
+
     //后面跟手机号和时间戳
     public static final String PHONE_ERROR="zkwg:error:phone:";
 
+
+    //后面追加手机号 值存储令牌
+    public static final String EMAIL_TOKEN="zkwg:email:";
+
+    //后面跟手机号 冻结的手机号
+    public static final String EMAIL_FOR="zkwg:for:email:";
+
+    //后面跟手机号和时间戳
+    public static final String EMAIL_ERROR="zkwg:error:email:";
+
+
+
+
     //有效期  seconds
     public static final int TOKEN_TIME=30*60; //令牌有效期 单位秒
     public static final int TOKENFOR_TIME=30*60; //冻结账号 单位秒
Index: src/main/java/com/qf/interceptor/TokenInterceptor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf.interceptor;\r\n\r\nimport com.alibaba.fastjson.JSON;\r\nimport com.qf.annotation.TokenValidate;\r\nimport com.qf.config.RedisKeyConfig;\r\nimport com.qf.constant.SystemConstant;\r\nimport com.qf.util.JedisCore;\r\nimport com.qf.util.StringUtil;\r\nimport com.qf.vo.R;\r\nimport org.springframework.stereotype.Component;\r\nimport org.springframework.web.bind.annotation.RequestMethod;\r\nimport org.springframework.web.method.HandlerMethod;\r\nimport org.springframework.web.servlet.HandlerInterceptor;\r\n\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\n/**\r\n * @ClassName: TokenInterceptor\r\n * @Author: 刘嘉豪\r\n * @Date: 2020/7/17\r\n * @Time: 9:25\r\n */\r\n@Component\r\npublic class TokenInterceptor implements HandlerInterceptor {\r\n    public TokenInterceptor(JedisCore jedisCore) {\r\n        this.jedisCore = jedisCore;\r\n    }\r\n\r\n    //此处注入会失效  应该在TokenInterceptorConfig配置类中使用构造方法注入↑↑↑↑\r\n    //@Autowired\r\n    private JedisCore jedisCore;\r\n\r\n    @Override\r\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\r\n        if (request.getMethod().equals(RequestMethod.OPTIONS.name())) {\r\n            setHeader(request,response);\r\n            return true;\r\n        }\r\n\r\n        //从执行的控制器方法中获取TokenValidate注解对象\r\n        //System.out.println(\"handler\"+handler);\r\n        TokenValidate tokenValidate = ((HandlerMethod) handler).getMethodAnnotation(TokenValidate.class);\r\n        if (null != tokenValidate) {//方法有TokenValidate注解  需要验证Token\r\n            String token = request.getHeader(SystemConstant.TOKEN_HEADER);\r\n            //System.out.println(token);\r\n            //校验token合法性\r\n            if (!StringUtil.checkEmpty(token)) {\r\n                if (jedisCore.checkKey(RedisKeyConfig.TOKEN_USER + token)) { //如果redis里有这个token对应的用户信息 就放行\r\n                    return true;\r\n                }\r\n            }\r\n            //验证失败的响应信息\r\n            response.setContentType(\"application/json;charset=UTF-8\");\r\n            response.getWriter().write((JSON.toJSONString(R.error(\"权限校验不通过，请重新登陆。\"))));\r\n            return false;\r\n        } else {//方法没有TokenValadate注解 无需验证token的接口走这里\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 为response设置header，实现跨域\r\n     */\r\n    private void setHeader(HttpServletRequest request,HttpServletResponse response) {\r\n        //跨域的header设置\r\n        response.setHeader(\"Access-control-Allow-Origin\", request.getHeader(\"Origin\"));\r\n        response.setHeader(\"Access-Control-Allow-Methods\", request.getMethod());\r\n        response.setHeader(\"Access-Control-Allow-Credentials\", \"true\");\r\n        response.setHeader(\"Access-Control-Allow-Headers\", request.getHeader(\"Access-Control-Request-Headers\"));\r\n        //防止乱码，适用于传输JSON数据\r\n        response.setHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/interceptor/TokenInterceptor.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/interceptor/TokenInterceptor.java	(date 1595290326417)
@@ -11,6 +11,7 @@
 import org.springframework.web.bind.annotation.RequestMethod;
 import org.springframework.web.method.HandlerMethod;
 import org.springframework.web.servlet.HandlerInterceptor;
+import org.springframework.web.servlet.resource.ResourceHttpRequestHandler;
 
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
@@ -33,6 +34,7 @@
 
     @Override
     public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
+        //System.out.println(handler);
         if (request.getMethod().equals(RequestMethod.OPTIONS.name())) {
             setHeader(request,response);
             return true;
@@ -40,23 +42,35 @@
 
         //从执行的控制器方法中获取TokenValidate注解对象
         //System.out.println("handler"+handler);
-        TokenValidate tokenValidate = ((HandlerMethod) handler).getMethodAnnotation(TokenValidate.class);
-        if (null != tokenValidate) {//方法有TokenValidate注解  需要验证Token
-            String token = request.getHeader(SystemConstant.TOKEN_HEADER);
-            //System.out.println(token);
-            //校验token合法性
-            if (!StringUtil.checkEmpty(token)) {
-                if (jedisCore.checkKey(RedisKeyConfig.TOKEN_USER + token)) { //如果redis里有这个token对应的用户信息 就放行
-                    return true;
-                }
-            }
-            //验证失败的响应信息
-            response.setContentType("application/json;charset=UTF-8");
-            response.getWriter().write((JSON.toJSONString(R.error("权限校验不通过，请重新登陆。"))));
-            return false;
-        } else {//方法没有TokenValadate注解 无需验证token的接口走这里
+
+        if( handler instanceof HandlerMethod){
+            TokenValidate tokenValidate = ((HandlerMethod) handler).getMethodAnnotation(TokenValidate.class);
+            if (null != tokenValidate) {//方法有TokenValidate注解  需要验证Token
+                String token = request.getHeader(SystemConstant.TOKEN_HEADER);
+                //System.out.println(token);
+                //校验token合法性
+                if (!StringUtil.checkEmpty(token)) {
+                    if (jedisCore.checkKey(RedisKeyConfig.TOKEN_USER + token)) { //如果redis里有这个token对应的用户信息 就放行
+                        return true;
+                    }
+                }
+                //验证失败的响应信息
+                response.setContentType("application/json;charset=UTF-8");
+                response.getWriter().write((JSON.toJSONString(R.error("权限校验不通过，请重新登陆。"))));
+                return false;
+            } else {//方法没有TokenValadate注解 无需验证token的接口走这里
+                return true;
+            }
+        }else if (handler instanceof ResourceHttpRequestHandler){
+            //静态资源放行
             return true;
         }
+        else {
+            response.setContentType("application/json;charset=UTF-8");
+            response.getWriter().write((JSON.toJSONString(R.error("调用接口出现异常"))));
+            return false;
+        }
+
     }
 
     /**
Index: src/main/java/com/qf/constant/SystemConstant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf.constant;\r\n\r\n/**\r\n * @program: voter\r\n * @description:\r\n * @author: Feri(邢朋辉)\r\n * @create: 2020-07-14 11:08\r\n */\r\npublic class SystemConstant {\r\n    //令牌的请求消息头\r\n    public static final String TOKEN_HEADER=\"zkwgtoken\";\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/constant/SystemConstant.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/constant/SystemConstant.java	(date 1595290326416)
@@ -8,5 +8,10 @@
  */
 public class SystemConstant {
     //令牌的请求消息头
-    public static final String TOKEN_HEADER="zkwgtoken";
+    public static final String TOKEN_HEADER = "zkwgtoken";
+    public static final String OSS_BUCKET = "zkwg";
+
+    //查询结果提示信息
+    public static final String QUERY_NULL = "查询为空";
+    public static final String QUERY_ERROR = "查询异常";
 }
Index: src/main/java/com/qf/config/TokenInterceptorConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.qf.config;\r\n\r\nimport com.qf.interceptor.TokenInterceptor;\r\nimport com.qf.util.JedisCore;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\r\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\r\n\r\n@Configuration\r\npublic class TokenInterceptorConfig implements WebMvcConfigurer {\r\n    //此处注入JedisCore\r\n\r\n    @Autowired\r\n    private JedisCore jedisCore;\r\n\r\n\r\n\r\n    @Override\r\n    public void addInterceptors(InterceptorRegistry registry) {\r\n        //设置拦截器并指定拦截路径\r\n        registry.addInterceptor(new TokenInterceptor(jedisCore)).addPathPatterns(\"/api/**\");\r\n        //registry.addInterceptor(new TokenInterceptor(jedisCore)).addPathPatterns(\"/**\");//拦截所有\r\n        //registry.addInterceptor(new TokenInterceptor(jedisCore)).addPathPatterns(\"/**\").excludePathPatterns(\"/test\");//指定不拦截\r\n        //添加自定义拦截器\r\n        WebMvcConfigurer.super.addInterceptors(registry);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/config/TokenInterceptorConfig.java	(revision f5f44fe17a4b871c11ccb62b8222bcdd6c2b3c38)
+++ src/main/java/com/qf/config/TokenInterceptorConfig.java	(date 1595290326415)
@@ -19,7 +19,8 @@
     @Override
     public void addInterceptors(InterceptorRegistry registry) {
         //设置拦截器并指定拦截路径
-        registry.addInterceptor(new TokenInterceptor(jedisCore)).addPathPatterns("/api/**");
+        //registry.addInterceptor(new TokenInterceptor(jedisCore)).addPathPatterns("/api/**");
+        registry.addInterceptor(new TokenInterceptor(jedisCore)).addPathPatterns("/**");
         //registry.addInterceptor(new TokenInterceptor(jedisCore)).addPathPatterns("/**");//拦截所有
         //registry.addInterceptor(new TokenInterceptor(jedisCore)).addPathPatterns("/**").excludePathPatterns("/test");//指定不拦截
         //添加自定义拦截器
Index: src/main/java/com/qf/service/impl/GoodsInfoServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/qf/service/impl/GoodsInfoServiceImpl.java	(date 0)
+++ src/main/java/com/qf/service/impl/GoodsInfoServiceImpl.java	(date 0)
@@ -0,0 +1,91 @@
+package com.qf.service.impl;
+
+import com.qf.constant.SystemConstant;
+import com.qf.dao.GoodsInfoDao;
+import com.qf.dto.*;
+import com.qf.service.GoodsInfoService;
+import com.qf.vo.R;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.List;
+
+/**
+ * @Class: OnlineStoreServiceImpl
+ * @Description:
+ * @Author: Jerry(姜源)
+ * @Create: 2020/07/18 14:59
+ */
+@Service
+public class GoodsInfoServiceImpl implements GoodsInfoService {
+
+    @Autowired
+    private GoodsInfoDao dao;
+
+    /**
+     * 查询包含所有分类的商品
+     * @return
+     */
+    @Override
+    public R queryAllGoods() {
+        List<Lev1TypeDto> allGoodsList = dao.queryAllGoods();
+        if (allGoodsList.size() > 0) {
+            return R.ok(allGoodsList);
+        }
+        return R.error(SystemConstant.QUERY_NULL);
+    }
+
+    /**
+     * 查询三级分类信息
+     * @return
+     */
+    @Override
+    public R queryTypeLevel() {
+        List<Lev1TypeDto> levelsList = dao.queryGoodsType();
+        if (levelsList.size() > 0) {
+            System.out.println("levelsList = " + levelsList);
+            return R.ok(levelsList);
+        }
+        return R.error(SystemConstant.QUERY_NULL);
+    }
+
+    /**
+     * 查询一级分类商品信息
+     * @return
+     */
+    @Override
+    public R queryGoodsByFirstLevel() {
+        List<Lev1TypeDto> lev1TypeDtoList = dao.queryGoodsByFirstLevel();
+        if (lev1TypeDtoList.size() > 0) {
+            return R.ok(lev1TypeDtoList);
+        }
+        return R.error(SystemConstant.QUERY_NULL);
+    }
+
+    /**
+     * 查询二级分类商品信息
+     * @return
+     */
+    @Override
+    public R queryGoodsBySecondLevel() {
+        List<Lev2TypeDto> lev2TypeDtoList = dao.queryGoodsBySecondLevel();
+        if (lev2TypeDtoList.size() > 0) {
+            return R.ok(lev2TypeDtoList);
+        }
+        return R.error(SystemConstant.QUERY_NULL);
+    }
+
+    /**
+     * 查询三级分类商品信息
+     * @return
+     */
+    @Override
+    public R queryGoodsByThirdLevel() {
+        List<Lev3TypeDto> lev3TypeDtoList = dao.queryGoodsByThirdLevel();
+        if (lev3TypeDtoList.size() > 0) {
+            return R.ok(lev3TypeDtoList);
+        }
+        return R.error(SystemConstant.QUERY_NULL);
+    }
+
+}
diff --git src/main/java/com/qf/dao/.gitignore src/main/java/com/qf/dao/.gitignore
new file mode 100644
diff --git src/main/java/com/qf/service/impl/.gitignore src/main/java/com/qf/service/impl/.gitignore
new file mode 100644
